name: Build Electron App

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0.0, v1.0.1, etc.

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Windows (64-bit)
        run: npm run build -- --x64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron app for Windows (32-bit)
        run: npm run build -- --ia32
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List contents of dist directory
        run: Get-ChildItem -Path dist -Recurse

      - name: Create Release and Upload Windows Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.exe
            dist/*.zip
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    needs: build-windows

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for macOS (Intel + Apple Silicon)
        run: npm run build -- --mac --x64 --arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List contents of dist directory
        run: ls -R dist

      - name: Upload macOS build to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.dmg
            dist/*.zip
            dist/*.pkg
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
